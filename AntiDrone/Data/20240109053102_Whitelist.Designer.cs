// <auto-generated />
using System;
using AntiDrone.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AntiDrone.Data
{
    [DbContext(typeof(AntiDroneContext))]
    [Migration("20240109053102_Database_Initial")]
    partial class Database_Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AntiDrone.Models.Systems.DroneControl.Whitelist", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("affiliation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("approval_end_date")
                        .HasColumnType("date");

                    b.Property<DateOnly>("approval_start_date")
                        .HasColumnType("date");

                    b.Property<string>("approval_state")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("contact")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("drone_id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("drone_model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("drone_type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("memo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("now_date")
                        .HasColumnType("date");

                    b.Property<string>("operator_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Whitelist");
                });
#pragma warning restore 612, 618
        }
    }
}
